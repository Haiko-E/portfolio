---
import { formatDate, urlForImage } from '../sanity/api.js';
import type { Project } from '../ts/types/types';

interface Props {
  project: Project;
  isClickable: boolean;
  imageURL?: string;
  className?: string;
}

const {
  project,
  isClickable = false,
  imageURL = project.backgroundimage.asset.url,
  className,
} = Astro.props;
---

{
  isClickable === true ? (
    <div class={`container ${className}`}>
      <div style='cursor: pointer' class={`project`}>
        <a rel='prefetch' href={`projects/${project.slug.current}`}>
          <div class='project-date'>{formatDate(project.date)}</div>
          <h3>{project.title}</h3>
          <p>{project.description}</p>
          <ul class='project__tags'>
            {project.tags.map((tag) => (
              <li class="notranslate">{tag}</li>
            ))}
          </ul>
        </a>
      </div>
      <img
        src={urlForImage(imageURL).auto('format').url()}
        alt={project.backgroundimage.alttext}
      />
    </div>
  ) : (
    <div class={`container ${className}`}>
      <div class={`project`}>
        <div class='project-date'>{formatDate(project.date)}</div>
        <h3>{project.title}</h3>
        <p>{project.description}</p>
        <div class='project__wrapper'>
          <ul class='project__tags'>
            {project.tags.map((tag) => (
              <li class="notranslate">{tag}</li>
            ))}
          </ul>
          <div class='project__links'>
            <a target='_blank' href={project.deployUrl}>
              <svg
                version='1.1'
                xmlns='http://www.w3.org/2000/svg'
                width='32'
                height='32'
                viewBox='0 0 32 32'
              >
                <title>Go to project</title>
                <path d='M16 6c-6.979 0-13.028 4.064-16 10 2.972 5.936 9.021 10 16 10s13.027-4.064 16-10c-2.972-5.936-9.021-10-16-10zM23.889 11.303c1.88 1.199 3.473 2.805 4.67 4.697-1.197 1.891-2.79 3.498-4.67 4.697-2.362 1.507-5.090 2.303-7.889 2.303s-5.527-0.796-7.889-2.303c-1.88-1.199-3.473-2.805-4.67-4.697 1.197-1.891 2.79-3.498 4.67-4.697 0.122-0.078 0.246-0.154 0.371-0.228-0.311 0.854-0.482 1.776-0.482 2.737 0 4.418 3.582 8 8 8s8-3.582 8-8c0-0.962-0.17-1.883-0.482-2.737 0.124 0.074 0.248 0.15 0.371 0.228v0zM16 13c0 1.657-1.343 3-3 3s-3-1.343-3-3 1.343-3 3-3 3 1.343 3 3z' />
              </svg>
            </a>
            <a target='_blank' href={project.gitUrl}>
              <svg
                version='1.1'
                xmlns='http://www.w3.org/2000/svg'
                width='40'
                height='32'
                viewBox='0 0 40 32'
              >
                <title>Go to github</title>
                <path d='M26 23l3 3 10-10-10-10-3 3 7 7z' />
                <path d='M14 9l-3-3-10 10 10 10 3-3-7-7z' />
                <path d='M21.916 4.704l2.171 0.592-6 22.001-2.171-0.592 6-22.001z' />
              </svg>
            </a>
          </div>
        </div>
      </div>
      <img
        src={urlForImage(imageURL).auto('format').url()}
        alt={project.backgroundimage.alttext}
      />
    </div>
  )
}

<style lang='scss'>
  @import '../sass/variables.scss';

  .container {
    display: flex;
    min-width: 100vw;
    min-height: 100vh;
    overflow: hidden;
  }

  .project {
    padding: 10px 0;
    overflow: hidden;
    width: 80vw;
    z-index: 2;
    color: $platinum;
    position: absolute;
    bottom: 20%;
    left: 10%;
    right: -10%;
    border-bottom: 1px solid $platinum;

    &:hover ~ img {
      transform: scale(110%);
    }

    &:hover {
      p {
        opacity: 1;
        margin: 0;
        margin-bottom: 3rem;
      }
    }

    &-date {
      @media (max-width: $media-medium) {
        text-align: center;
      }
    }

    ~ img {
      display: inline-block;
      position: relative;
      object-fit: cover;
      object-position: center;
      width: 100%;
      height: 100vh;
      transition: all 300ms ease-in-out;
    }

    a h3 {
      margin-top: 0.2em;
      margin-bottom: 1em;
      font-size: 4rem;

      @media (max-width: $media-medium) {
        text-align: center;
      }
    }
    p {
      transition: all ease-in-out 300ms;
      opacity: 0;

      margin-bottom: 0rem;
    }

    ul {
      padding: 0;
      display: flex;
      list-style: none;

      @media (max-width: $media-medium) {
        justify-content: center;
      }
    }

    li {
      padding-right: 1em;
    }
    a {
      color: inherit;
      text-decoration: none;
    }

    &__wrapper {
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    &__tags {
      flex-wrap: wrap;
    }

    &__links {
      display: flex;

      :not(:last-child) {
        margin-right: 2rem;
      }

      a {
        line-height: 0;
        transform: scale(100%);
        transition: all 200ms ease-in-out;

        &:hover {
          transform: scale(110%);
        }
      }

      svg {
        width: 1.5rem;
        height: 1.5rem;
        fill: $platinum;
      }
    }
  }
</style>
