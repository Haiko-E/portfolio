---
import { formatDate, urlForImage } from '../sanity/api.js';
import type { Project } from '../ts/types/types';

interface Props {
  project: Project;
  isClickable: boolean;
  imageURL?: string;
  className?: string;
}

const {
  project,
  isClickable = false,
  imageURL = project.backgroundimage.asset.url,
  className,
} = Astro.props;
---

{
  isClickable === true ? (
    <div class={`container ${className}`}>
      <div style='cursor: pointer' class={`project`}>
        <a href={`projects/${project.slug.current}`}>
          <div class='project-date'>{formatDate(project.date)}</div>
          <h4>{project.title}</h4>
          <p>{project.description}</p>
          <ul class='project__tags'>
            {project.tags.map((tag) => (
              <li>{tag}</li>
            ))}
          </ul>
        </a>
      </div>
      <img
        src={urlForImage(imageURL).auto('format').url()}
        alt={project.backgroundimage.alttext}
      />
    </div>
  ) : (
    <div class={`container ${className}`}>
      <div class={`project`}>
        <div class='project-date'>{formatDate(project.date)}</div>
        <h4>{project.title}</h4>
        <p>{project.description}</p>
        <ul class='project__tags'>
          {project.tags.map((tag) => (
            <li>{tag}</li>
          ))}
        </ul>
      </div>
      <img
        src={urlForImage(imageURL).auto('format').url()}
        alt={project.backgroundimage.alttext}
      />
    </div>
  )
}

<style lang='scss'>
  @import '../sass/variables.scss';
  @import '../sass/styles.scss';

  .container {
    display: flex;
    min-width: 100vw;
    min-height: 100vh;
    overflow: hidden;
  }

  .project {
    padding: 10px 0;
    overflow: hidden;
    width: 80vw;
    z-index: 2;
    color: $platinum;
    position: absolute;
    bottom: 20%;
    left: 10%;
    right: -10%;
    border-bottom: 1px solid $platinum;

    &:hover ~ img {
      transform: scale(110%);
    }

    &:hover {
      p {
        opacity: 1;
        margin: 0;
        margin-bottom: 3rem;
      }
    }

    &-date {
      @media (max-width: $media-medium) {
        text-align: center;
      }
    }

    ~ img {
      display: inline-block;
      position: relative;
      object-fit: cover;
      object-position: center;
      width: 100%;
      height: 100vh;
      transition: all 300ms ease-in-out;
    }

    h4 {
      margin-top: 0.2em;
      margin-bottom: 1em;
      font-size: 4rem;

      @media (max-width: $media-medium) {
        text-align: center;
      }
    }
    p {
      transition: all ease-in-out 300ms;
      opacity: 0;

      margin-bottom: 0rem;
    }

    ul {
      padding: 0;
      display: flex;
      list-style: none;

      @media (max-width: $media-medium) {
        justify-content: center;
      }
    }

    li {
      padding-right: 1em;
    }
    a {
      color: inherit;
      text-decoration: none;
    }
  }
</style>
